/*:>--------------------------------------------------------------------
**: FILE:       mBbcDCM.c.template
**: HISTORY:
**:             00jan93-v000a-hpl- Created by stic Version
**:  Id: idl.y,v 1.3 1998/04/20 19:56:35 leitch Exp  
**:<------------------------------------------------------------------*/
#include "mBbcDCM.h"
#include <emlLib.h>
#include <cstddef>

int
ds2ReallocTable(TABLE_HEAD_ST** ppHeader, char** ppData, size_t newRowCount);


long mBbcDCM_(
  TABLE_HEAD_ST        *dBbcFEM_h,        DBBCFEM_ST          *dBbcFEM ,
  TABLE_HEAD_ST        *dBbcDCM_h,        DBBCDCM_ST          *dBbcDCM)
{
/*:>--------------------------------------------------------------------
**: ROUTINE:    mBbcDCM_
**: DESCRIPTION: Physics Analysis Module ANSI C template.
**:             This is an ANSI C Physics Analysis Module template
**:             automatically generated by stic from mBbcDCM.idl.
**:             Please edit comments and code.
**: AUTHOR:     hpl - H.P. Lovecraft, hplovecraft@cthulhu.void
**: ARGUMENTS:
**:       IN:
**:            dBbcFEM    - PLEASE FILL IN DESCRIPTION HERE
**:           dBbcFEM_h   - header Structure for dBbcFEM
**:    INOUT:
**:      OUT:
**:            dBbcDCM    - PLEASE FILL IN DESCRIPTION HERE
**:           dBbcDCM_h   - header Structure for dBbcDCM
**: RETURNS:    STAF Condition Value
**:>------------------------------------------------------------------*/
  
   int next = 0;   /* for counting words in output table */
   int imodule = 0;/* FEM module index (0-16) */
   int offset = 389; /* offset in DCM words to store  FEM ID */  
   
   if (dBbcDCM_h->maxlen < 1){
     ds2ReallocTable(&dBbcDCM_h,(char**)&dBbcDCM,1);
   }
 
   /*** dBbcDCM->scheme=IDBBC_DCM0; ***/
   dBbcDCM->scheme=1001;
   dBbcDCM->packetID= 1001;

   dBbcDCM->DCM[next]=0xf0000+dBbcFEM->Flag; 
   next++;
   dBbcDCM->DCM[next]=0xe0000+16;
   next++;
   dBbcDCM->DCM[next]=0x60000+dBbcFEM->Ecounter;
   next++;
   dBbcDCM->DCM[next]=0x60000+dBbcFEM->Bcounter;
   next++;
   dBbcDCM->DCM[next]=0x60000+dBbcFEM->det;
   next++;
   
   for (int i = 0; i < 400; i++)
     {
       if (i % 25 == 0)
	 {
	   dBbcDCM->DCM[offset + imodule] = 0x10080000 + dBbcFEM->Word[i];
	   imodule++;
	 }
       else
	 {
	   int pmtID = (i - imodule) / 3;
	   int pmtID_HEX = 1048576 * pmtID;
           int mode;
	   if ((i - imodule) % 3 == 0)
	     {
	       mode = pmtID_HEX + 0x000c0000;
	     }
	   else if ((i - imodule) % 3 == 1)
	     {
	       mode = pmtID_HEX + 0x000b0000;
	     }
	   else
	     {
	       mode = pmtID_HEX + 0x000a0000;
	     }
	   dBbcDCM->DCM[next] = mode + dBbcFEM->Word[i];
	   next++;
	 }
     }

   next+=16;
   dBbcDCM->DCM[next]=0x10080000+dBbcFEM->parity;
   next++;
   dBbcDCM->DCM[next]=0x10070000+dBbcFEM->CAV2;
   next++;
   dBbcDCM->nWord=next; 

   dBbcDCM_h->nok = 1;    /*  set by CFM, September 12, 1998    */
                          /*  correct by HO, September 14, 1998 */

   return STAFCV_OK;

}
