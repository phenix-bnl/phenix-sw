<?php
$today=getdate();
$date=$today[mday]."/".$today[mon]."/".$today[year];
$verbosity=FALSE; //Set this to TRUE to see the arrays passed for multiple param queries

// <!-- if ($_POST['makeList']||$_POST['makeMParList']||$_POST['makeSqlList'])
//{
//  print("Found POST!");
//} else {
//  print("Did not find POST.");
//}

if ($_GET['makeList'] || $_GET['makeMParList'] || $_GET['makeSqlList']) 
{

	// query db for parameter within the range
	$psqlhost = "phnxdb2.phenix.bnl.gov";
	$psqluser = "phbrowse";
	$psqldb = "calibrations";
	$psqlpwd = "phbrowse";
	
	if ($_POST['makeMParList']) { //if the user has posted to genlist.php from the multiple param query submit
		
	  $numcuts=$_POST['numcuts'];
	  $mpar=$_POST['mpar'];
	  for ($cut=1;$cut<=$numcuts;$cut++) list ($mtablename[$cut], $mparamname[$cut])=split("::", $mpar[$cut]); //for each cut, the mpar array looks like "subsystem::parameter".  This splits these into mtablename="subsystem", mparamname="parameter"
	  $mparamlow=$_POST['mparamlow'];
	  $mparamhigh=$_POST['mparamhigh'];
	  $mparamlogicstring=$_POST['mparamlogicstring'];
	  $runmin=$_POST['runmin'];
	  $runmax=$_POST['runmax'];
	  $tag=$_POST['tag'];
		
//	//This takes the logc string and translates it into the proper sql statement
//	$sql="";
//	$mparamlogicstring = str_replace("&", " INTERSECT ", $mparamlogicstring);
//	$mparamlogicstring = str_replace("|", " UNION ", $mparamlogicstring);
//	for ($cut=1;$cut<=$numcuts;$cut++) {
//		$mparamlogicstring=str_replace("C$cut", "(select runnumber from (select * from $mtablename[$cut] where parname='$mparamname[$cut]' and tag like '$tag' and runnumber < $runmax and runnumber > $runmin and parameter < $mparamhigh[$cut] and parameter > $mparamlow[$cut]) as cut$cut)", $mparamlogicstring);
			}
//	$sql.=$mparamlogicstring;
//	$sql.=" order by runnumber";
		}
//if ($_POST['query']) {
//	$sql = $_POST['query'];
//}
//	$conn = pg_connect("host=$psqlhost user=$psqluser dbname=$psqldb password=$psqlpwd") or die("<br>Unable to connect to db.");
//	$result = pg_exec($conn, $sql) or die("Psql Error:".pg_result_error());
//	$numrows=pg_numrows($result);
	
//}
// -->
header("Content-type: text/plain");
print("\nThis runlist was generated by the Quality Control WebPage on $date.");
// <!--
//print("\n--------------------------------------------------");
//if ($_POST['makeSqlList']) {
//	print("\nDate: $date");
//	print("\nsql=\"$sql\"\n");
//	print("\n--------------------------------------------------");
//	for ($i=0;$i<$numrows;$i++) {
//		$obj=pg_fetch_object($result);
//		print("\n".$obj->runnumber);
//		}
//	}
//if ($_POST['makeMParList']) {
//	if ($verbosity) {
//		print("\nsql=\"$sql\"\n");
//		print("\nnumcuts= $numcuts");
//		print("\nmtablename=");
//		print_r($mtablename);
//		print("\nmparname=");
//		print_r($mparamname);
//		print("\nmparamlow=");
//		print_r($mparamlow);
//		print("\nmparamhigh=");
//		print_r($mparamhigh);
//		}
//	for ($i=0;$i<$numrows;$i++) {
//		$obj=pg_fetch_object($result);
//		print("\n".$obj->runnumber);
//		}
//	}

//if ($numrows==0) print("\nNo runs fit your required criteria");  -->
print("\n-----------------------END------------------------");
?>
